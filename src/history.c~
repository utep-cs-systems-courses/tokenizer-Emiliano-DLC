#include <stdlib.h>
#include <stdio.h>
#include "tokenizer.h"
#include "history.h"

//Struct defined at history.h

List* init_history()
{
  List* history_list = (List*)malloc(sizeof(List)); //allocate memory
  return history_list; //return linked list
}

/* Add a history item to the end of the list.
   List* list - the linked list
   char* str - the string to store
*/
void add_history(List *list, char *str)
{
  Item* data = (Item*)malloc(sizeof(Item)); //allocates memory for Item
  Item* node = list -> root; //node
  int len = 0, id_index = 0; //variables 
  while(str[len] != '\0'){len++;}//Get the length of the str
}



/* Retrieve the string stored in the node where Item->id == id.

   List* list - the linked list

   int id - the id of the Item to find */

char *get_history(List *list, int id);



/*Print the entire contents of the list. */

void print_history(List *list);



/*Free the history list and the strings it references. */

void free_history(List *list);

